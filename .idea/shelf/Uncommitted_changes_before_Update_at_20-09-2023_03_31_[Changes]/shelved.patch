Index: app/src/main/java/com/example/thesoulsync/viewmodels/LoginViewmodel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.thesoulsync.viewmodels\r\n\r\nclass LoginViewmodel {\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/viewmodels/LoginViewmodel.kt b/app/src/main/java/com/example/thesoulsync/viewmodels/LoginViewmodel.kt
--- a/app/src/main/java/com/example/thesoulsync/viewmodels/LoginViewmodel.kt	(revision 728c7bd9e4df5771fcb4adbd9ac449a21d042474)
+++ b/app/src/main/java/com/example/thesoulsync/viewmodels/LoginViewmodel.kt	(date 1695160507614)
@@ -1,4 +1,61 @@
 package com.example.thesoulsync.viewmodels
 
-class LoginViewmodel {
-}
\ No newline at end of file
+import android.util.Log
+import android.widget.Toast
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.example.thesoulsync.events.LoginEvent
+import com.example.thesoulsync.states.LoginStates
+import com.example.thesoulsync.user.User
+import com.google.firebase.auth.FirebaseAuth
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.SharingStarted
+import kotlinx.coroutines.flow.stateIn
+import kotlinx.coroutines.launch
+
+private val TAG = "LoginViewmodel"
+class LoginViewmodel(private val auth: FirebaseAuth) : ViewModel() {
+
+    private val _states  = MutableStateFlow(LoginStates())
+    val states = _states.stateIn(
+        viewModelScope,
+        SharingStarted.WhileSubscribed(5000),
+        LoginStates())
+
+    fun onEvent(event : LoginEvent){
+        when(event){
+            is LoginEvent.Login -> {
+                auth.signInWithEmailAndPassword(event.email, event.password)
+                    .addOnCompleteListener() { task ->
+                        if (task.isSuccessful) {
+                            // Sign in success, update UI with the signed-in user's information
+                            Log.d(TAG, "signInWithEmail:success")
+                            viewModelScope.launch {
+                                _states.emit(
+                                    _states.value.copy(
+                                        user = User(auth.currentUser?.uid , ""),
+                                        logged = true
+                                    )
+                                )
+                                Log.d(TAG, "signInWithEmail:success" + "${_states.value.user?.uuid}")
+                            }
+
+
+
+                        } else {
+                            // If sign in fails, display a message to the user.
+                            Log.w(TAG, "signInWithEmail:failure", task.exception)
+                            onEvent(LoginEvent.LoginFailed)
+
+                        }
+                    }
+            }
+            LoginEvent.LoginFailed -> {
+                throw LoginFailedException("")
+            }
+        }
+    }
+
+}
+
+class LoginFailedException(message : String) : Exception(message) {}
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>buildscript {\r\n    dependencies {\r\n        classpath 'com.google.gms:google-services:4.4.0'\r\n    }\r\n}// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.android.application' version '8.0.2' apply false\r\n    id 'com.android.library' version '8.0.2' apply false\r\n    id 'org.jetbrains.kotlin.android' version '1.8.20' apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 728c7bd9e4df5771fcb4adbd9ac449a21d042474)
+++ b/build.gradle	(date 1695158423489)
@@ -6,5 +6,5 @@
 plugins {
     id 'com.android.application' version '8.0.2' apply false
     id 'com.android.library' version '8.0.2' apply false
-    id 'org.jetbrains.kotlin.android' version '1.8.20' apply false
+    id 'org.jetbrains.kotlin.android' version '1.9.0' apply false
 }
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n    id 'com.google.gms.google-services'\r\n    id \"kotlin-kapt\"\r\n    id \"kotlin-parcelize\"\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.thesoulsync'\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.thesoulsync\"\r\n        minSdk 27\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding = true\r\n        dataBinding = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.12.0'\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.9.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.firebase:firebase-database-ktx:20.2.2'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n\r\n    // view model dependencies\r\n    def viewmodelversion = \"2.6.1\"\r\n    //noinspection GradleDependency\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodelversion\"\r\n\r\n    //Parcelization\r\n    apply plugin: \"kotlin-parcelize\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 728c7bd9e4df5771fcb4adbd9ac449a21d042474)
+++ b/app/build.gradle	(date 1695158327557)
@@ -1,3 +1,5 @@
+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
+
 plugins {
     id 'com.android.application'
     id 'org.jetbrains.kotlin.android'
@@ -27,11 +29,8 @@
         }
     }
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
-    kotlinOptions {
-        jvmTarget = '1.8'
+        sourceCompatibility JavaVersion.VERSION_17
+        targetCompatibility JavaVersion.VERSION_17
     }
     buildFeatures {
         viewBinding = true
@@ -50,6 +49,13 @@
     androidTestImplementation 'androidx.test.ext:junit:1.1.5'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
 
+    // Import the BoM for the Firebase platform
+    implementation(platform("com.google.firebase:firebase-bom:32.3.1"))
+
+    // Add the dependency for the Firebase Authentication library
+    // When using the BoM, you don't specify versions in Firebase library dependencies
+    implementation("com.google.firebase:firebase-auth-ktx")
+
     // view model dependencies
     def viewmodelversion = "2.6.1"
     //noinspection GradleDependency
@@ -57,4 +63,5 @@
 
     //Parcelization
     apply plugin: "kotlin-parcelize"
-}
\ No newline at end of file
+}
+
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.TheSoulSync\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 728c7bd9e4df5771fcb4adbd9ac449a21d042474)
+++ b/app/src/main/AndroidManifest.xml	(date 1695157270054)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
-
+    <uses-permission android:name="android.permission.INTERNET"/>
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
Index: app/src/main/java/com/example/thesoulsync/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.thesoulsync\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/MainActivity.kt b/app/src/main/java/com/example/thesoulsync/MainActivity.kt
--- a/app/src/main/java/com/example/thesoulsync/MainActivity.kt	(revision 728c7bd9e4df5771fcb4adbd9ac449a21d042474)
+++ b/app/src/main/java/com/example/thesoulsync/MainActivity.kt	(date 1695157504796)
@@ -2,8 +2,10 @@
 
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
+import com.google.firebase.auth.FirebaseAuth
 
 class MainActivity : AppCompatActivity() {
+    lateinit var auth : FirebaseAuth
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_main)
Index: app/src/main/java/com/example/thesoulsync/states/LoginStates.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/states/LoginStates.kt b/app/src/main/java/com/example/thesoulsync/states/LoginStates.kt
new file mode 100644
--- /dev/null	(date 1695160507613)
+++ b/app/src/main/java/com/example/thesoulsync/states/LoginStates.kt	(date 1695160507613)
@@ -0,0 +1,10 @@
+package com.example.thesoulsync.states
+
+import com.example.thesoulsync.user.User
+
+data class LoginStates(
+    var email : String? = "" ,
+    var password : String? = "",
+    var logged : Boolean = false,
+    var user : User? = null
+)
\ No newline at end of file
Index: app/src/main/java/com/example/thesoulsync/events/RegistrationEvents.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/events/RegistrationEvents.kt b/app/src/main/java/com/example/thesoulsync/events/RegistrationEvents.kt
new file mode 100644
--- /dev/null	(date 1695160507614)
+++ b/app/src/main/java/com/example/thesoulsync/events/RegistrationEvents.kt	(date 1695160507614)
@@ -0,0 +1,5 @@
+package com.example.thesoulsync.events
+
+sealed interface RegistrationEvents{
+    data class register(val email : String , val password : String)
+}
\ No newline at end of file
Index: app/src/main/java/com/example/thesoulsync/events/LoginEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/events/LoginEvent.kt b/app/src/main/java/com/example/thesoulsync/events/LoginEvent.kt
new file mode 100644
--- /dev/null	(date 1695158465905)
+++ b/app/src/main/java/com/example/thesoulsync/events/LoginEvent.kt	(date 1695158465905)
@@ -0,0 +1,7 @@
+package com.example.thesoulsync.events
+
+sealed interface LoginEvent{
+    data class Login(val email : String , val password : String) : LoginEvent
+    data object LoginFailed : LoginEvent
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/thesoulsync/user/User.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/user/User.kt b/app/src/main/java/com/example/thesoulsync/user/User.kt
new file mode 100644
--- /dev/null	(date 1695160507614)
+++ b/app/src/main/java/com/example/thesoulsync/user/User.kt	(date 1695160507614)
@@ -0,0 +1,6 @@
+package com.example.thesoulsync.user
+
+data class User(
+    var uuid: String? = null,
+    var username : String? = ""
+)
Index: app/src/main/java/com/example/thesoulsync/states/RegistrationStates.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/thesoulsync/states/RegistrationStates.kt b/app/src/main/java/com/example/thesoulsync/states/RegistrationStates.kt
new file mode 100644
--- /dev/null	(date 1695160507606)
+++ b/app/src/main/java/com/example/thesoulsync/states/RegistrationStates.kt	(date 1695160507606)
@@ -0,0 +1,7 @@
+package com.example.thesoulsync.states
+
+data class RegistrationStates(
+    var email : String? = "" ,
+    var password : String? = "",
+    var completed : Boolean = false
+)
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"KotlinJpsPluginSettings\">\r\n    <option name=\"version\" value=\"1.8.20\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
--- a/.idea/kotlinc.xml	(revision 728c7bd9e4df5771fcb4adbd9ac449a21d042474)
+++ b/.idea/kotlinc.xml	(date 1695158466263)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="KotlinJpsPluginSettings">
-    <option name="version" value="1.8.20" />
+    <option name="version" value="1.9.0" />
   </component>
 </project>
\ No newline at end of file
